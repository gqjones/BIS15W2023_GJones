print()
print('Hello')
print('Hello World')
array = [21,22,24,26,28,30,31,33,60]
array = (21,22,24,26,28,30,31,33,60)
array = (21, 22, 24, 26, 28, 30, 31, 33, 60)
array = [21,22,24,26,28,30,31,33,60]
array = [[21,22,24,26,28,30,31,33,60]]
array == [21,22,24,26,28,30,31,33,60]
array = [21,22,24,26,28,30,31,33,60
array = 21,22,24,26,28,30,31,33,60
array = (21,22,24,26,28,30,31,33,60)
array = list(21,22,24,26,28,30,31,33,60)
array
for i in array:
for list
for i in list
for i in list
for val in list
for (val in array) {}
for (val in array) {
print(val)
}
for (val in array) {
sum =+ (val)
}
sum
sum = 0
for (val in array) {
sum = (val + sum)
}
sum
array = [21,22,24,24,26,28,30,31,33,60]
array = list(21,22,24,24,26,28,30,31,33,60)
sum = 0
for (val in array) {
sum = (val + sum)
}
summation <- function(array) {
for (val in array) {
sum = (val + sum)
}
}
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(sum)
}
}
summation(array)
array
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(array)
}
}
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum)
}
summation
summation(array)
View(summation)
View(summation)
View(summation)
View(summation)
View(summation)
find_mean <- function(array,n) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/n)
}
find_mean(array,10)
View(find_mean)
find_mean <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/length(array))
}
find_mean(array,10)
find_mean(array)
(26+28)/2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
length(array)
length(array)/2
length(array)%%2
(array[floor(length(array)/2)
find_median <- function(array){
find_median <- function(array){
if (length(array) %% 2 == 0){
median = array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
View(find_median)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)])) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
floor(length(array)/2
d
floor(25.5)
floor(length(array)/2)
round(length(array)/2)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
array[1]
array[length(array)/2]
array[length(array)/2] + 1
array = c(21,22,24,24,26,28,30,31,33,60)
find_mean(array)
find_median(array)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
return(median)
}
find_median(array)
View(find_median)
first_quartile(vector)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(vector)
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
0.25(length(vector)) + 1
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
result = (floor(length(vector)) + round(length(vector))) / 2
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
floor(2.75)
source("~/.active-rstudio-document")
floor(2.75)
first_quartile(array)
array[floor(length(array)/2)
]
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
first_quartile(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector))
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
lower_outlier(array)
test <- function(vector){
print(vector)
}
test(array)
test <- function(vector){
print(first_quartile(vector))
}
test(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
source("~/.active-rstudio-document")
lower_outlier(array)
source("~/.active-rstudio-document")
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
first_quartile(array)
third_quartile(array)
third_quartile <- function(vector){
result = (0.75*(length(vector) + 1))
if (result != floor(result)){
result = (vector[floor(result)] + vector[floor(result)+1])/2
}
return(result)
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(result)
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(first_quartile(vector) - (1.5*(first_quartile(vector) + third_quartile(vector))))
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(first_quartile(vector) + third_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier()
lower_outlier(array)
upper_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(third_quartile(vector) - first_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier(array)
source("~/Vector Statistics.R")
View(summation)
source("~/Vector Statistics.R")
standard_dev(array)
source("~/Vector Statistics.R")
standard_dev(array)
standard_dev(array) / 9
127.4333 ^ (1/2)
source("~/Vector Statistics.R")
variance(array)
source("~/Vector Statistics.R")
setwd("~/GitHub/BIS15W2023_GJones")
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
library("tidyverse")
mammals <- readr::read_csv("data/mammal_lifehistories_v2.csv")
names(mammals)
mammals <- rename(mammals, genus="Genus", wean_mass="wean mass", max_life= "max. life", litter_size="litter size", litters_per_year="litters/year")
names(mammals)
filter(fish, lakeid == "AL")
select(fish, lakeid, scalelength)
fish %>%
select(lakeid, scalelength) %>%
filter(lakeid == "AL")
mammals %>%
select(family, genus, species, gestation) %>%
filter(gestation>=15)
fish %<%
filter(lakeid == "AL" | lakeid == "AR")%>%
filter(radii_length_mm > 2 & radii_length_mm < 4)
fish %>%
filter(lakeid == "AL" | lakeid == "AR")%>%
filter(radii_length_mm > 2 & radii_length_mm < 4)
fish %>%
select(lakeid, scalelength) %>%
arrange(scalelength)
fish %>%
select(lakeid, scalelength) %>%
arrange(desc(scalelength))
fish %>%
select(lakeid, length, fish_id, scalelength) %>%
filter(lakeid=="AL") %>%
arrange(fish_id)
fish%>%
select(radii_length_mm, scalelength)%>%
filter(fish_id==300)%>%
arrange(radii_length_mm)
fish%>%
select(radii_length_mm, scalelength)%>%
filter(fish_id==300)%>%
arrange(radii_length_mm)
fish%>%
select(radii_length_mm, scalelength)%>%
filter('fish_id'==300)%>%
arrange(radii_length_mm)
fish%>%
select(radii_length_mm, scalelength)%>%
filter(fish, fish_id==300)%>%
arrange(radii_length_mm)
names(fish)
fish%>%
select(radii_length_mm, scalelength)%>%
filter(lakeid==300)%>%
arrange(radii_length_mm)
fish%>%
select(radii_length_mm, scalelength)%>%
filter(lake_id==300)%>%
arrange(radii_length_mm)
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
fish%>%
select(radii_length_mm, scalelength)%>%
filter(lake_id==300)%>%
arrange(radii_length_mm)
fish%>%
select(radii_length_mm, scalelength)%>%
filter(fish_id==300)%>%
arrange(radii_length_mm)
fish%>%
select(radii_length_mm, scalelength, fish_id)%>%
filter(fish_id==300)%>%
arrange(radii_length_mm)
fish %>%
mutate(length_mm = length*10) %>%
select(fish_id, length, length_mm)
mammals
mammals %>%
mutate_all(tolower)
mammals %>%
mutate(across(c("order", "family"), tolower))
mammals %>%
select(genus, species, newborn) %>%
arrange(newborn)
mammals %>%
select(genus, species, newborn) %>%
mutate(newborn_new = ifelse(newborn == -999.00, NA, newborn))%>%
arrange(newborn)
fish%>%
select(fish_id, length)%>%
mutate(length_half = length / 2)
mammals%>%
select(family, genus, species, max_life)%>%
mutate(max_life_new = ifelse(max_life == -999, NA, max_life))%>%
arrange(desc(max_life_new))
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
names(superhero_info)
superhero_info <- rename(superhero_info, gender="Gender", eye_color="Eye color", race="Race", hair_color="Hair color", height="Height",
publisher="Publisher", skin_color="Skin color", alignment="Alignment", weight="Weight")
head(superhero_powers)
names(superhero_powers)
library("janitor")
superhero_powers <- janitor::clean_names(superhero_powers)
tabyl(superhero_info, alignment)
names(superhero_info)
superhero_info%>%
select(name, alignment)%>%
filter(alignment=='neutral')
select(superhero_info, name, alignment, race)
filter(superhero_info, race!='Human')
good_guys <- filter(superhero_info, alignment="good")
good_guys <- filter(superhero_info, alignment=="good")
good_guys <- filter(superhero_info, alignment=="good")
bad_guys <- filter(superhero_info, alignment=="bad")
tabyl(good_guys, race)
good_guys%>%
select(name, race)%>%
filter(race=="Asgardians")
good_guys%>%
select(name, race)%>%
filter(race=="Asgardian")
names(bad_guys)
bad_guys%>%
select(name, gender, race, height)%>%
filter(height > 200)
bad_guys%>%
select(name, gender, race, height)%>%
filter(height > 200 & gender == "Male")
good_guys$hair_color
count(c('a','a','b'))
total(c('a','a','b'))
good_guys%>%
select(hair_color)%>%
filter(hair_color=="No Hair")
bad_guys%>%
select(hair_color)%>%
filter(hair_color=="No Hair")
filter(superhero_info, height > 200 | weight >= 450)
filter(superhero_info, height > 300)
filter(superhero_info, weight > 450)
superhero_info%>%
mutate(height_to_weight_ratio = height / weight)%>%
arrange(height_to_weight_ratio)
superhero_info%>%
mutate(height_to_weight_ratio = height / weight)%>%
arrange(desc(height_to_weight_ratio))
glimpse(superhero_powers)
filter(superhero_info, accelerated_healing == TRUE & durability == TRUE & super_strength == TRUE)
names(superhero_powers)
superhero_powers%>%
select(hero_names, accelerated_healing, durability, super_strength)%>%
filter(accelerated_healing==TRUE & durability==TRUE & super_strength==TRUE)
superhero_info$name
filter(superhero_powers, hero_name=="Stargirl")
filter(superhero_powers, hero_names=="Stargirl")
glimpse(filter(superhero_powers, hero_names=="Stargirl"))
# glimpse(filter(superhero_powers, hero_names=="Stargirl"))
# filter_all(superhero_powers, TRUE)
filter(superhero_powers, hero_names="Stargirl" & across(superhero_powers[2:] == TRUE))
# glimpse(filter(superhero_powers, hero_names=="Stargirl"))
# filter_all(superhero_powers, TRUE)
filter(superhero_powers, hero_names="Stargirl" & across(superhero_powers[2:length(superhero_powers)] == TRUE))
# glimpse(filter(superhero_powers, hero_names=="Stargirl"))
# filter_all(superhero_powers, TRUE)
filter(superhero_powers, hero_names=="Stargirl" & across(superhero_powers[2:length(superhero_powers)] == TRUE))
# glimpse(filter(superhero_powers, hero_names=="Stargirl"))
# filter_all(superhero_powers, TRUE)
filter(superhero_powers, hero_names=="Stargirl" & across(names(superhero_powers[2:length(superhero_powers)])) == TRUE)
# glimpse(filter(superhero_powers, hero_names=="Stargirl"))
filter_all(superhero_powers, TRUE)
# glimpse(filter(superhero_powers, hero_names=="Stargirl"))
filter_all(superhero_powers, all_vars() == TRUE)
glimpse(filter(superhero_powers, hero_names=="Stargirl"))
glimpse(filter(superhero_powers, hero_names=="Stargirl"))
for (i in 2:length(superhero_powers)){
if (superhero_powers[i][1] == TRUE){
print(superhero_powers[i][1])
}
}
stargirl <- filter(superhero_powers, hero_names=="Stargirl"))
stargirl <- filter(superhero_powers, hero_names=="Stargirl")
for (i in 2:length(stargirl)){
if (stargirl[i][1] == TRUE){
print(stargirl[i][1])
}
}
stargirl <- filter(superhero_powers, hero_names=="Stargirl")
for (i in 2:length(stargirl)){
if (stargirl[i][1] == TRUE){
print(stargirl[i])
}
}
