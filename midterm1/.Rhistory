print()
print('Hello')
print('Hello World')
array = [21,22,24,26,28,30,31,33,60]
array = (21,22,24,26,28,30,31,33,60)
array = (21, 22, 24, 26, 28, 30, 31, 33, 60)
array = [21,22,24,26,28,30,31,33,60]
array = [[21,22,24,26,28,30,31,33,60]]
array == [21,22,24,26,28,30,31,33,60]
array = [21,22,24,26,28,30,31,33,60
array = 21,22,24,26,28,30,31,33,60
array = (21,22,24,26,28,30,31,33,60)
array = list(21,22,24,26,28,30,31,33,60)
array
for i in array:
for list
for i in list
for i in list
for val in list
for (val in array) {}
for (val in array) {
print(val)
}
for (val in array) {
sum =+ (val)
}
sum
sum = 0
for (val in array) {
sum = (val + sum)
}
sum
array = [21,22,24,24,26,28,30,31,33,60]
array = list(21,22,24,24,26,28,30,31,33,60)
sum = 0
for (val in array) {
sum = (val + sum)
}
summation <- function(array) {
for (val in array) {
sum = (val + sum)
}
}
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(sum)
}
}
summation(array)
array
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(array)
}
}
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum)
}
summation
summation(array)
View(summation)
View(summation)
View(summation)
View(summation)
View(summation)
find_mean <- function(array,n) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/n)
}
find_mean(array,10)
View(find_mean)
find_mean <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/length(array))
}
find_mean(array,10)
find_mean(array)
(26+28)/2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
length(array)
length(array)/2
length(array)%%2
(array[floor(length(array)/2)
find_median <- function(array){
find_median <- function(array){
if (length(array) %% 2 == 0){
median = array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
View(find_median)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)])) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
floor(length(array)/2
d
floor(25.5)
floor(length(array)/2)
round(length(array)/2)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
array[1]
array[length(array)/2]
array[length(array)/2] + 1
array = c(21,22,24,24,26,28,30,31,33,60)
find_mean(array)
find_median(array)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
return(median)
}
find_median(array)
View(find_median)
first_quartile(vector)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(vector)
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
0.25(length(vector)) + 1
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
result = (floor(length(vector)) + round(length(vector))) / 2
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
floor(2.75)
source("~/.active-rstudio-document")
floor(2.75)
first_quartile(array)
array[floor(length(array)/2)
]
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
first_quartile(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector))
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
lower_outlier(array)
test <- function(vector){
print(vector)
}
test(array)
test <- function(vector){
print(first_quartile(vector))
}
test(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
source("~/.active-rstudio-document")
lower_outlier(array)
source("~/.active-rstudio-document")
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
first_quartile(array)
third_quartile(array)
third_quartile <- function(vector){
result = (0.75*(length(vector) + 1))
if (result != floor(result)){
result = (vector[floor(result)] + vector[floor(result)+1])/2
}
return(result)
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(result)
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(first_quartile(vector) - (1.5*(first_quartile(vector) + third_quartile(vector))))
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(first_quartile(vector) + third_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier()
lower_outlier(array)
upper_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(third_quartile(vector) - first_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier(array)
source("~/Vector Statistics.R")
View(summation)
source("~/Vector Statistics.R")
standard_dev(array)
source("~/Vector Statistics.R")
standard_dev(array)
standard_dev(array) / 9
127.4333 ^ (1/2)
source("~/Vector Statistics.R")
variance(array)
source("~/Vector Statistics.R")
setwd("~/GitHub/BIS15W2023_GJones/midterm1")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
ecosphere <- read_csv("data/ecs21351-sup-0003-SupplementS1.csv", skip=2) %>%
clean_names() %>%
slice(1:(n() - 18)) # this removes the footer
names(ecosphere)
glimpse(ecosphere)
length(unique(ecosphere$order))
table(ecosphere$habitat)
# Woodland has the highest diversity
?slice_max
ecosphere %>%
slice_max(winter_range_area)
ecosphere %>%
slice_min(winter_range_area)
ducks <- ecosphere %>%
select(-'order', -'family')%>%
filter(family=='Anatidae')
ducks <- ecosphere %>%
filter(family=='Anatidae')%>%
select(-'order', -'family')
filter(ducks, habitat != 'Wetland')
glimpse(ducks)
filter(ducks, habitat != 'Wetland')
unique(ducks$migratory_strategy)
unique(ducks$migratory_strategy)
ducks$log10_mass
mean(filter(ducks, migratory_strategy == 'Long')$log10_mass)
mean(ducks$log10_mass)
print('Average Long Migratory Mass')
mean(filter(ducks, migratory_strategy == 'Long')$log10_mass)
print('Average Mass')
mean(ducks$log10_mass)
eagles <- ecosphere%>%
filter(family=='Accipitridae')%>%
select('common_name', 'scientific_name', 'population_size')
conservation_status <- c()
for (v in eagles$population_size){
if (v < 250000){
conservation_status <- append(conservation_status, 'Threatened')
} else {
conservation_status <- append(conservation_status, 'Not Threatened')
}
}
conservation_status <- c()
for (v in eagles$population_size){
if (v <= 250000){
conservation_status <- append(conservation_status, 'Threatened')
} else {
conservation_status <- append(conservation_status, 'Not Threatened')
}
}
conservation_status <- c()
for (v in eagles$population_size){
print(v)
if (v < 250000){
conservation_status <- append(conservation_status, 'Threatened')
} else {
conservation_status <- append(conservation_status, 'Not Threatened')
}
}
View(eagles)
conservation_status <- c()
for (v in eagles$population_size){
if (v < 250000 | v == NA){
conservation_status <- append(conservation_status, 'Threatened')
} else {
conservation_status <- append(conservation_status, 'Not Threatened')
}
}
conservation_status <- c()
for (v in eagles$population_size){
if (v < 250000 %or% v == NA){
conservation_status <- c()
for (v in eagles$population_size){
if (v < 250000 | v == NA){
conservation_status <- append(conservation_status, 'Threatened')
} else {
conservation_status <- append(conservation_status, 'Not Threatened')
}
}
mutate(conservation_status = ifelse(eagles$population_size < 250,000, 'Threatened', 'Not_Threatened'))
mutate(conservation_status = ifelse(eagles$population_size < 250000, 'Threatened', 'Not_Threatened'))
mutate(conservation_status = ifelse(eagles$population_size == NA, 0, eagles$population_size))
mutate(conservation_status = ifelse(is.na(eagles$population_size), 0, eagles$population_size))
eagles%>%
mutate(conservation_status = ifelse(is.na(population_size), 0, population_size))
eagles%>%
mutate(conservation_status = ifelse(is.na(population_size), 0, population_size))%>%
mutate(conservation_status = ifelse(population_size > 0 & population_size < 2500000, 'Threatened', 'Not-Threatened'))
eagles%>%
#mutate(conservation_status = ifelse(is.na(population_size), 0, population_size))%>%
mutate(conservation_status = ifelse(population_size > 0 & population_size < 2500000, 'Threatened', 'Not-Threatened'))
eagles%>%
#mutate(conservation_status = ifelse(is.na(population_size), 0, population_size))%>%
mutate(conservation_status = ifelse(population_size > 0 & population_size < 2500000, 'Threatened', 'Not-Threatened'))
eagles%>%
#mutate(conservation_status = ifelse(is.na(population_size), 0, population_size))%>%
mutate(conservation_status = ifelse(population_size < 2500000, 'Threatened', 'Not-Threatened'))
eagles%>%
mutate(conservation_status = ifelse(population_size < 2500000, 'Threatened', 'Not-Threatened'))
eagles%>%
mutate(conservation_status = ifelse(population_size < 250000, 'Threatened', 'Not-Threatened'))
filter(eagles, population_size == NA)
filter(eagles, is.na(population_size))
View(ecosphere)
ecosphere%>%
filter(diet == 'Fruit')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
ecosphere <- read_csv("data/ecs21351-sup-0003-SupplementS1.csv", skip=2) %>%
clean_names() %>%
slice(1:(n() - 18)) # this removes the footer
ecosphere <- read_csv("data/ecs21351-sup-0003-SupplementS1.csv", skip=2) %>%
clean_names() %>%
slice(1:(n() - 18)) # this removes the footer
names(ecosphere)
glimpse(ecosphere)
length(unique(ecosphere$order))
table(ecosphere$habitat)
# Woodland has the highest diversity
?slice_max
ecosphere %>%
slice_max(winter_range_area)
ecosphere %>%
slice_min(winter_range_area)
ducks <- ecosphere %>%
filter(family=='Anatidae')%>%
select(-'order', -'family')
filter(ducks, habitat != 'Wetland')
# The Common Elder is a species of duck that lives in the ocean
print('Average Long Migratory Mass')
mean(filter(ducks, migratory_strategy == 'Long')$log10_mass)
print('Average Mass')
mean(ducks$log10_mass)
# Ducks that have a "Long" migratory strategy have a relatively lower average body mass
eagles <- ecosphere%>%
filter(family=='Accipitridae')%>%
select('common_name', 'scientific_name', 'population_size')
eagles%>%
mutate(conservation_status = ifelse(population_size < 250000, 'Threatened', 'Not-Threatened'))
filter(eagles, is.na(population_size))
# The species shown in this data frame need further study. We know this because their population size is unknown.
ecosphere%>%
filter(diet == 'Fruit')
ecosphere%>%
filter(diet == 'Vegetarian')
ecosphere%>%
filter(diet == 'Vegetarian')
ecosphere%>%
filter(diet == 'Vegetation')
mean_veg <- mean(filter(ecosphere$diet == 'Vegetation'))
mean_veg <- mean(filter(ecosphere$diet == 'Vegetation')$mean_eggs_per_clutch)
mean_veg <- mean(filter(ecosphere$diet == 'Vegetation')$mean_eggs_per_clutch)
mean_veg <- mean(filter(ecosphere$diet == 'Vegetation')$mean_eggs_per_clutch)
mean_veg <- mean(filter(ecosphere, diet == 'Vegetation')$mean_eggs_per_clutch)
mean_omn <- mean(filter(ecosphere, diet == 'Omnivore')$mean_eggs_per_clutch)
mean_omn > mean_veg
print('Average Long Migratory Mass')
mean(filter(ducks, migratory_strategy == 'Long')$log10_mass)
print('Average Mass')
mean(filter(ducks, migratotory_strategy != 'Long')$log10_mass)
print('Average Long Migratory Mass')
mean(filter(ducks, migratory_strategy == 'Long')$log10_mass)
print('Average Mass')
mean(filter(ducks, migratory_strategy != 'Long')$log10_mass)
# Ducks that have a "Long" migratory strategy have a relatively lower average body mass
