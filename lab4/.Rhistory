print()
print('Hello')
print('Hello World')
array = [21,22,24,26,28,30,31,33,60]
array = (21,22,24,26,28,30,31,33,60)
array = (21, 22, 24, 26, 28, 30, 31, 33, 60)
array = [21,22,24,26,28,30,31,33,60]
array = [[21,22,24,26,28,30,31,33,60]]
array == [21,22,24,26,28,30,31,33,60]
array = [21,22,24,26,28,30,31,33,60
array = 21,22,24,26,28,30,31,33,60
array = (21,22,24,26,28,30,31,33,60)
array = list(21,22,24,26,28,30,31,33,60)
array
for i in array:
for list
for i in list
for i in list
for val in list
for (val in array) {}
for (val in array) {
print(val)
}
for (val in array) {
sum =+ (val)
}
sum
sum = 0
for (val in array) {
sum = (val + sum)
}
sum
array = [21,22,24,24,26,28,30,31,33,60]
array = list(21,22,24,24,26,28,30,31,33,60)
sum = 0
for (val in array) {
sum = (val + sum)
}
summation <- function(array) {
for (val in array) {
sum = (val + sum)
}
}
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(sum)
}
}
summation(array)
array
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(array)
}
}
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum)
}
summation
summation(array)
View(summation)
View(summation)
View(summation)
View(summation)
View(summation)
find_mean <- function(array,n) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/n)
}
find_mean(array,10)
View(find_mean)
find_mean <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/length(array))
}
find_mean(array,10)
find_mean(array)
(26+28)/2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
length(array)
length(array)/2
length(array)%%2
(array[floor(length(array)/2)
find_median <- function(array){
find_median <- function(array){
if (length(array) %% 2 == 0){
median = array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
View(find_median)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)])) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
floor(length(array)/2
d
floor(25.5)
floor(length(array)/2)
round(length(array)/2)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
array[1]
array[length(array)/2]
array[length(array)/2] + 1
array = c(21,22,24,24,26,28,30,31,33,60)
find_mean(array)
find_median(array)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
return(median)
}
find_median(array)
View(find_median)
first_quartile(vector)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(vector)
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
0.25(length(vector)) + 1
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
result = (floor(length(vector)) + round(length(vector))) / 2
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
floor(2.75)
source("~/.active-rstudio-document")
floor(2.75)
first_quartile(array)
array[floor(length(array)/2)
]
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
first_quartile(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector))
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
lower_outlier(array)
test <- function(vector){
print(vector)
}
test(array)
test <- function(vector){
print(first_quartile(vector))
}
test(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
source("~/.active-rstudio-document")
lower_outlier(array)
source("~/.active-rstudio-document")
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
first_quartile(array)
third_quartile(array)
third_quartile <- function(vector){
result = (0.75*(length(vector) + 1))
if (result != floor(result)){
result = (vector[floor(result)] + vector[floor(result)+1])/2
}
return(result)
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(result)
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(first_quartile(vector) - (1.5*(first_quartile(vector) + third_quartile(vector))))
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(first_quartile(vector) + third_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier()
lower_outlier(array)
upper_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(third_quartile(vector) - first_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier(array)
source("~/Vector Statistics.R")
View(summation)
source("~/Vector Statistics.R")
standard_dev(array)
source("~/Vector Statistics.R")
standard_dev(array)
standard_dev(array) / 9
127.4333 ^ (1/2)
source("~/Vector Statistics.R")
variance(array)
source("~/Vector Statistics.R")
setwd("~/GitHub/BIS15W2023_GJones/lab4")
knitr::opts_chunk$set(echo = TRUE)
homerange <- readr::read_csv('/data/Tamburelloetal_HomeRangeDatabase.csv')
homerange <- readr::read_csv('data/Tamburelloetal_HomeRangeDatabase.csv')
glimpse(homerange)
library(tidyverse)
glimpse(homerange)
homerange$taxon <- as.factor(homerange$taxon)
glimpse(homerange)
homerange$order <- as.factor(homerange$taxon)
homerange <- readr::read_csv('data/Tamburelloetal_HomeRangeDatabase.csv')
homerange$taxon <- as.factor(homerange$taxon)
levels(homerange$taxon)
homerange$order <- as.factor(homerange$order)
levels(homerange$order)
library(tidyverse)
taxa <- select(homerange, 'taxon', 'common.name', 'class', 'order', 'family', 'genus', 'species')
View(taxa)
table(homerange$taxon)
unique(homerange$taxon)
taxa <- select(homerange, 'taxon', 'common.name', 'class', 'order', 'family', 'genus', 'species')
levels(homerange$taxon)
taxa <- select(homerange, 'taxon', 'common.name', 'class', 'order', 'family', 'genus', 'species')
table(homerange$trophic.guild)
View(homerange)
carnivores <- filter(homerange, trophic.guild == 'carnivore')
herbivores <- filter(homerange, trophic.guild == 'carnivore')
View(herbivores)
herbivores <- filter(homerange, trophic.guild == 'herbivore')
print(mean(herbivores$mean.hra.m2, na.rm=T) > mean(carnivores$mean.hra.m2, na.rm=T))
'deer' in homerange$species
table(homerange$species)
table(homerange$common.name)
colnames(homerange)
deer <- filter(select(homerange, 'mean.mass.g', 'log10.mass', 'family', 'genus', 'species'), family == 'cervidae')
View(deer)
sort(deer, decending=TRUE)
sort(deer$log10.mass, decending=TRUE)
sort(deer$log10.mass, desending=TRUE)
sorted.deer <- deer[order(-log10.mass)]
sorted.deer <- deer[order(-'log10.mass')]
sorted.deer <- deer[order(-deer$log10.mass),]
View(sorted.deer)
max(sorted.deer$log10.mass)
top(sorted.deer$log10.mass)
deer <- filter(select(homerange, 'mean.mass.g', 'log10.mass', 'family', 'genus', 'species', 'common.name'), family == 'cervidae')
sorted.deer <- deer[order(-deer$log10.mass),]
print(sorted.deer$common.name[0])
print(sorted.deer$common.name)
print(sorted.deer$common.name[1])
where(homerange$mean.hra.m2 == max(homerange$mean.hra.m2))
which(homerange$mean.hra.m2 == max(homerange$mean.hra.m2))
which(homerange$mean.hra.m2 == max(homerange$mean.hra.m2 & homerange$taxon == 'snakes'))
which(homerange$mean.hra.m2 == max(homerange$mean.hra.m2) & homerange$taxon == 'snakes')
snakes <- filter(homerange, homerange$taxon == 'snakes')
which(snakes$mean.hra.m2 == max(snakes$mean.hra.m2))
snakes <- filter(homerange, homerange$taxon == 'snakes')
snakes$species[which(snakes$mean.hra.m2 == max(snakes$mean.hra.m2))]
