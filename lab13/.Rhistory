print()
print('Hello')
print('Hello World')
array = [21,22,24,26,28,30,31,33,60]
array = (21,22,24,26,28,30,31,33,60)
array = (21, 22, 24, 26, 28, 30, 31, 33, 60)
array = [21,22,24,26,28,30,31,33,60]
array = [[21,22,24,26,28,30,31,33,60]]
array == [21,22,24,26,28,30,31,33,60]
array = [21,22,24,26,28,30,31,33,60
array = 21,22,24,26,28,30,31,33,60
array = (21,22,24,26,28,30,31,33,60)
array = list(21,22,24,26,28,30,31,33,60)
array
for i in array:
for list
for i in list
for i in list
for val in list
for (val in array) {}
for (val in array) {
print(val)
}
for (val in array) {
sum =+ (val)
}
sum
sum = 0
for (val in array) {
sum = (val + sum)
}
sum
array = [21,22,24,24,26,28,30,31,33,60]
array = list(21,22,24,24,26,28,30,31,33,60)
sum = 0
for (val in array) {
sum = (val + sum)
}
summation <- function(array) {
for (val in array) {
sum = (val + sum)
}
}
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(sum)
}
}
summation(array)
array
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
return(array)
}
}
summation(array)
summation <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum)
}
summation
summation(array)
View(summation)
View(summation)
View(summation)
View(summation)
View(summation)
find_mean <- function(array,n) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/n)
}
find_mean(array,10)
View(find_mean)
find_mean <- function(array) {
sum = 0
for (val in array) {
sum = (val + sum)
}
return(sum/length(array))
}
find_mean(array,10)
find_mean(array)
(26+28)/2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
length(array)
length(array)/2
length(array)%%2
(array[floor(length(array)/2)
find_median <- function(array){
find_median <- function(array){
if (length(array) %% 2 == 0){
median = array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)]) / 2)
} else {
median = array[round(length(array) / 2)]
}
}
View(find_median)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = ((array[floor(length(array)/2)] + array[round(length(array)/2)])) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
floor(length(array)/2
d
floor(25.5)
floor(length(array)/2)
round(length(array)/2)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
}
find_median(array)
array[1]
array[length(array)/2]
array[length(array)/2] + 1
array = c(21,22,24,24,26,28,30,31,33,60)
find_mean(array)
find_median(array)
find_median <- function(array){
if (length(array) %% 2 == 0){
median = (array[length(array)/2] + array[(length(array)/2)+1]) / 2
} else {
median = array[round(length(array) / 2)]
}
return(median)
}
find_median(array)
View(find_median)
first_quartile(vector)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(vector)
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
0.25(length(vector)) + 1
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
result = (floor(length(vector)) + round(length(vector))) / 2
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
first_quartile(array)
floor(2.75)
source("~/.active-rstudio-document")
floor(2.75)
first_quartile(array)
array[floor(length(array)/2)
]
source("~/.active-rstudio-document")
first_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
source("~/.active-rstudio-document")
third_quartile(array)
first_quartile(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector))
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
lower_outlier(array)
test <- function(vector){
print(vector)
}
test(array)
test <- function(vector){
print(first_quartile(vector))
}
test(array)
source("~/.active-rstudio-document")
lower_outlier(array)
first_quartile(array) - 1.5*(first_quartile(array) + third_quartile(array))
source("~/.active-rstudio-document")
lower_outlier(array)
source("~/.active-rstudio-document")
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
first_quartile(array)
third_quartile(array)
third_quartile <- function(vector){
result = (0.75*(length(vector) + 1))
if (result != floor(result)){
result = (vector[floor(result)] + vector[floor(result)+1])/2
}
return(result)
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(result)
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
lower_outlier <- function(vector){
return(first_quartile(vector) - 1.5*(first_quartile(vector) + third_quartile(vector)))
}
return(first_quartile(vector) - (1.5*(first_quartile(vector) + third_quartile(vector))))
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(first_quartile(vector) + third_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier()
lower_outlier(array)
upper_outlier(array)
upper_outlier <- function(vector){
return(third_quartile(vector) + 1.5*(third_quartile(vector) - first_quartile(vector)))
}
source("~/.active-rstudio-document")
lower_outlier(array)
upper_outlier(array)
source("~/Vector Statistics.R")
View(summation)
source("~/Vector Statistics.R")
standard_dev(array)
source("~/Vector Statistics.R")
standard_dev(array)
standard_dev(array) / 9
127.4333 ^ (1/2)
source("~/Vector Statistics.R")
variance(array)
source("~/Vector Statistics.R")
edu_level <- readr::read_csv("data/education_level.csv")
edu_level
edu_level %>%
pivot_wider(names_from = (education_level), #new column names come from the education_level column
values_from = c(mean_income, n)) #values come from two separate columns
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
#install.packages("here")
head(read.csv("data/sydneybeaches.csv"))
#library(here)
sydneybeaches <- read_csv("data/sydneybeaches.csv")%>% janitor::clean_names()
unique(sydneybeaches$region)
sydneybeaches_long <- sydneybeaches%>%
select("site", "date", "enterococci_cfu_100ml")
View(sydneybeaches_long)
sydneybeaches_wide <- sydneybeaches_wide%>%
pivot_longer(-site, names_to = "date", values_to = "enterococci_cfu_100ml")
sydneybeaches_wide <- sydneybeaches_long%>%
pivot_wider(names_from = "date", values_from = "enterococci_cfu_100ml")
View(sydneybeaches_wide)
sydneybeaches_long <- sydneybeaches_long%>%
separate(date, into = c("day", "month", "year"), sep = "/")
?df
table <- data.frame(
c(120, 230),
c(435,463),
c(234,25)
)
t(table)
tran<-t(table)
View(tran)
View(table)
tran<-as.data.frame(t(table))
View(tran)
View(table)
setwd("~/GitHub/BIS15W2023_GJones/lab13")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
install.packages(ggmap)
install.packages("ggmap")
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
install.packages(albersusa)
install.packages("albersusa")
library(albersusa)
install.packages("albersusa")
grizzly <- read.csv("data/bear-sightings.csv")
grizzly <- read.csv("data/bear-sightings.csv")
glimpse(grizzly)
View(grizzly)
grizzly %>%
select(latitude, longitude) %>%
summary()
bbox <- make_bbox(c(-166.2, -131.3), c(55.02, 70.37), f=0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1)+
geom_point(data=grizzly, aes(longitude, latitude))+
labs(title = "Grizzly Bear Sighting Locations in Alaska",
x= "Longitude",
y="Latiude")
?geom_point
ggmap(map1)+
geom_point(data=grizzly, aes(longitude, latitude), size = 2)+
labs(title = "Grizzly Bear Sighting Locations in Alaska",
x= "Longitude",
y="Latiude")
ggmap(map1)+
geom_point(data=grizzly, aes(longitude, latitude), size = 0.5)+
labs(title = "Grizzly Bear Sighting Locations in Alaska",
x= "Longitude",
y="Latiude")
ggmap(map1)+
geom_point(data=grizzly, aes(longitude, latitude), size = 0.8)+
labs(title = "Grizzly Bear Sighting Locations in Alaska",
x= "Longitude",
y="Latiude")
ggmap(map1)+
geom_point(data=grizzly, aes(longitude, latitude), size = 1)+
labs(title = "Grizzly Bear Sighting Locations in Alaska",
x= "Longitude",
y="Latiude")
wolves <- read.csv("data/wolves_data/wolves_dataset.csv")
wolves <- read.csv("data/wolves_data/wolves_dataset.csv")
glimpse(wolves)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(naniar)
library(lubridate)
library(dplyr)
library(RColorBrewer)
visibility <- read.csv("Potential Data/Final Data .csv")
visibility <- visibility%>%
na_if(-999)
seasons <- c()
for (date in visibility$Date){
date <- mdy(date)
# Winter Dec 20 - Mar 19
if ((month(date) == 12 & day(date) >= 20) | month(date) %in% c(1, 2) | (month(date) == 3 & day(date) <= 19)){
seasons <- c(seasons, "winter")
}
# Spring Mar 20 - June 20
else if ((month(date) == 3 & day(date) >= 20) | month(date) %in% c(4, 5) | (month(date) == 6 & day(date) <= 20)){
seasons <- c(seasons, "spring")
}
# Summer June 21 - Sept 22
else if ((month(date) == 6 & day(date) >= 21) | month(date) %in% c(7, 8) | (month(date) == 9 & day(date) <= 22)){
seasons <- c(seasons, "summer")
}
# Autumn Sept 23 - Dec 19
else{
seasons <- c(seasons, "autumn")
}
}
visibility$season = seasons
visibility <- visibility%>%
separate(Date, into = c("month", "day", "year"))
visibility
mean_by_season <- visibility%>%
mutate(SiteName=paste(SiteName, year, sep="_"))%>%
mutate(SiteName=paste(SiteName, season, sep=" "))%>%
group_by(SiteName)%>%
summarise(mean_ammNO3=mean(ammNO3f_Val, na.rm=T),
mean_ammSO4=mean(ammSO4f_Val, na.rm=T),
mean_EC=mean(ECf_Val, na.rm=T),
mean_OMC=mean(OMCf_Val, na.rm=T),
mean_SOIL=mean(SOILf_Val, na.rm=T),
mean_SVR=mean(SVR_Val, na.rm=T))%>%
as.data.frame()%>%
separate(SiteName, into = c("SiteName", "year"), sep="_")%>%
separate(year, into = c("year", "season"), sep=" ")
mean_by_season
mean_by_season%>%
filter(SiteName=="Fresno")%>%
ggplot(aes(year, mean_SVR, fill=season))+
geom_col(position = "dodge")
# Creating a long pivot so its easier to grab the metrics
mean_by_season_long <- mean_by_season%>%
pivot_longer(cols= starts_with("mean"), names_to = "metric", values_to = "value")
ui <- fluidPage(
selectInput("site", "Select Site Name", choices = unique(visibility$SiteName)),
selectInput("y", "Select Visibility Metric", choices = unique(mean_by_season_long$metric), selected = "mean_SVR"),
plotOutput("plot", width = "1200px", height = "800px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
mean_by_season%>%
filter(SiteName == input$site)%>%
ggplot(aes_string("year", input$y, fill="season"))+
geom_col(position = "dodge")+
labs(title=paste(input$y, "For", input$site, "by Year"), x="Year")
})
}
shinyApp(ui, server)
length(unique(wolves$year))
View(wolves)
length(unique(wolves$habitat))
length(unique(wolves$pop))
unique(wolves$pop)
?contains
"ab" %in% "crab"
?filter
"A" != c("d", "A")
lower_us <- wolves%>%
filter(pop != "AK.PEN" | pop != "INT.AK" | pop != "SE.AK")
lower_us
lower_us <- wolves%>%
filter(pop != "AK.PEN" & pop != "INT.AK" & pop != "SE.AK")
lower_us
lower_us%>%
select(lat, long)%>%
summarise()
lower_us%>%
select(lat, long)%>%
summary()
bbox <- make_bbox(c(-151.06, -82.42), c(33.89, 80.50), f=0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
bbox <- make_bbox(c(-151.06, -82.42), c(33.89, 80.50), f=0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1)+
geom_point(data = lower_us, aes(lat, lon))
ggmap(map1)+
geom_point(data=lower_us, aes(lon, lat), size = 1)+
labs(title = "Wolf Observation Locations",
x= "Longitude",
y="Latiude")
View(lower_us)
ggmap(map1)+
geom_point(data=lower_us, aes(long, lat), size = 1)+
labs(title = "Wolf Observation Locations",
x= "Longitude",
y="Latiude")
ggmap(map1)+
geom_point(data=lower_us, aes(long, lat, fill=pop), size = 1)+
labs(title = "Wolf Observation Locations",
x= "Longitude",
y="Latiude")
ggmap(map1)+
geom_point(data=lower_us, aes(long, lat, color=pop), size = 1)+
labs(title = "Wolf Observation Locations",
x= "Longitude",
y="Latiude")
lower_us <- wolves%>%
filter(pop != "AK.PEN" & pop != "INT.AK" & pop != "SE.AK")
head(lower_us)
