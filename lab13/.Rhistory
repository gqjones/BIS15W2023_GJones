setwd("~/Documents/GitHub/BIS15W2023_GJones/lab13")
knitr::opts_chunk$set(echo = FALSE)
library("jpeg")
elephants <- read.csv("data/ElephantsMF.csv")
glimpse(elephants)
library("janitor")
library("tidyverse")
library("shiny")
glimpse(elephants)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices=unique(elephants$Sex))
plotOutput("plot", width="800px", height="600px")
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
elephants%>%
filter(Sex=="x")%>%
ggplot(aes(Age, Height))+
geom_point()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
elephants%>%
filter(Sex=="M")%>%
ggplot(aes(Age, Height))+
geom_point()
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
elephants%>%
filter(Sex=="x")%>%
ggplot(aes(Age, Height))+
geom_point()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex=="x")%>%
ggplot(aes(Age, Height))+
geom_point()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex=="x")%>%
ggplot(aes_string("Age", "Height"))+
geom_point()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex=="sex")%>%
ggplot(aes(Age, Height))+
geom_point()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex=="sex)%>%
ggplot(aes(Age, Height))+
geom_point()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex==sex)%>%
ggplot(aes(Age, Height))+
geom_point()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex==input$sex)%>%
ggplot(aes(Age, Height))+
geom_point()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex==input$sex)%>%
ggplot(aes(Age, Height))+
geom_point()+
labs(title="Relationship between Age & Sex in Elephants")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("Age vs Sex in Elephants"),
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
helpText("Phyllis Lee, Stirling University, and are related to Lee, P., et al. (2013), Enduring consequences of early experiences: 40-year effects on survival and success among African elephants (Loxodonta Africana), Biology Letters, 9: 20130011.")
plotOutput("plot", width="800px", height="600px")
library(shiny)
ui <- fluidPage(
titlePanel("Age vs Sex in Elephants"),
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
helpText("Phyllis Lee, Stirling University, and are related to Lee, P., et al. (2013), Enduring consequences of early experiences: 40-year effects on survival and success among African elephants (Loxodonta Africana), Biology Letters, 9: 20130011."),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
elephants%>%
filter(Sex==input$sex)%>%
ggplot(aes(Age, Height))+
geom_point()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
titlePanel("Age vs Height in Elephants"),
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
helpText("Referance: Phyllis Lee, Stirling University, and are related to Lee, P., et al. (2013), Enduring consequences of early experiences: 40-year effects on survival and success among African elephants (Loxodonta Africana), Biology Letters, 9: 20130011."),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
if (input$sex == "M"){
output$plot <- renderPlot({
elephants%>%
filter(Sex=="M")%>%
ggplot(aes(Age, Height))+
geom_point()
} else {
library(shiny)
ui <- fluidPage(
titlePanel("Age vs Height in Elephants"),
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
helpText("Referance: Phyllis Lee, Stirling University, and are related to Lee, P., et al. (2013), Enduring consequences of early experiences: 40-year effects on survival and success among African elephants (Loxodonta Africana), Biology Letters, 9: 20130011."),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
if (input$sex == "M"){
output$plot <- renderPlot({
elephants%>%
filter(Sex=="M")%>%
ggplot(aes(Age, Height))+
geom_point()}
else {
library(shiny)
ui <- fluidPage(
titlePanel("Age vs Height in Elephants"),
selectInput("sex", "Sex", choices = unique(elephants$Sex)),
helpText("Referance: Phyllis Lee, Stirling University, and are related to Lee, P., et al. (2013), Enduring consequences of early experiences: 40-year effects on survival and success among African elephants (Loxodonta Africana), Biology Letters, 9: 20130011."),
plotOutput("plot", width="800px", height="600px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
if (input$sex == "M"){
output$plot <- renderPlot({
elephants%>%
filter(Sex=="M")%>%
ggplot(aes(Age, Height))+
geom_point()
})} else {
output$plot <- renderPlot({
elephants%>%
filter(Sex=="F")%>%
ggplot(aes(Age, Height))+
geom_point()
})}
}
shinyApp(ui, server)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = T)
files
spider_list <- lapply(files, read_csv)
View(spider_list)
spider_list[[3]]
names(spider_list[[2]])
names(spider_list[2])
names(spider_list[[9]])
glimpse(spider_list[[9]])
glimpse(spider_list)
str(spider_list)
names(spider_list[[1:32]])
names(spider_list[[1:31]])
names(spider_list[[1:31]])
names(spider_list[[1:2]])
names(spider_list[[1]])
for (i in 1:32){
names(spider_list[[i]])}
for (i in 1:32){
names(spider_list[[i]])
}
for (i in 1:32){
names(spider_list[[1]])
}
names <- list.files(path="data/spiders", pattern=" .csv")
names_list <- strsplit(names, split=" .csv")
names_vec <- unlist(names_list)
names(spider_list) <- names_vec # Applies the names in names_vec to the data frames in the list spider_list
names_vec <- unlist(names_list) # Converts the names list to a vector
names(spider_list) <- names_vec # Applies the names in names_vec to the data frames in the list spider_list
View(spider_list)
spider_list$Kern
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv("data/table_A.csv")
table_B <- read_csv("data/table_B.csv")
table_A
table_B
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <-
left_join(spiders_all, spiders_locs, by = "Accession")
summary(spiders_with_locs)
names(spiders_with_locs)
View(spiders_with_locs)
day <- today()
day
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")#not lubridate
mdy_hms(dateformat1)
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
mdy_hms(dateformat1)
mdy(dateformat1)
mdy(dateformat1)
mdy_hms(dateformat1)
mdy(dateformat1)
mdy(dateformat2)
mdy(dateformat2)
dmy(dateformat2)
mdy(dateformat2)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
class(mdy(dateformat2))
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
#install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
ggmap(map1)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
grizzly <- read_csv("data/bear-sightings.csv")
glimpse(grizly)
glimpse(grizzly)
grizzly%>%
select(latitude, longitude)$>$
grizzly%>%
select(latitude, longitude)%>%
summary()
grizzly%>%
select(latitude, longitude)%>%
summary()
latitude <- c(55.02, 70.37)
longitude <- c(-166.2, -131.3)
bbox <- make_bbox(longitude, latitude, f=0.05)
map2 <- get_map(bbox, maptype = "terrain-lines", source = "stamen")
ggmap(map2)
#install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv("data/spiders_with_locs.csv")%>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x= "Longitude", y= "Latitude", title="Spider Locations")
grizzly <- read_csv("data/bear-sightings.csv")
grizzly%>%
select(latitude, longitude)%>%
summary()
latitude <- c(55.02, 70.37)
longitude <- c(-166.2, -131.3)
bbox <- make_bbox(longitude, latitude, f=0.05)
map2 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map2)
ggmap(map2)+
geom_point(grizzly, aes(latitude, longitude))+
labs(title="title",
x="Longitude",
y="Latitude")
ggmap(map2)+
geom_point(grizzly, aes(latitude, longitude))
ggmap(map2)+
geom_point(data=grizzly, aes(latitude, longitude))
View(grizzly)
ggmap(map2)+
geom_point(data=grizzly, aes(longitude, latitude))
ggmap(map2)+
geom_point(data=grizzly, aes(longitude, latitude))+
labs(title="title",
x="Longitude",
y="Latitude")
