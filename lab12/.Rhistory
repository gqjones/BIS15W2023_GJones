selected = "bill_length_mm")
)
server <- function(input, output) {
reactive({input$x
input$y})
}
shinyApp(ui, server)
penguins%>%
ggplot(aes(bill_length_mm, flipper_length_mm))%>%
geom_point()
penguins%>%
ggplot(aes(bill_length_mm, flipper_length_mm))+
geom_point()
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
outputplot <- renderPlot(){
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
outputplot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color=species))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
outputplot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
outputplot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
plotOutput("plot", width = "500px", height = "400px")
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
outputplot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
outputplot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y), color="species")+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
outputplot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
outputplot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
library(shiny)
ui <- fluidPage(
selectInput("trophic.guild", "Trophic Guild", choices = unique(homerange$trophic.guild))
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
View(homerange)
library(shiny)
ui <- fluidPage(
selectInput("trophic.guild", "Trophic Guild", choices = unique(homerange$trophic.guild)),
selectInput("thermoregulation", "Thermoregulation", choices = unique(homerange$thermoregulation))
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("trophic.guild", "Trophic Guild", choices = unique(homerange$trophic.guild)),
selectInput("thermoregulation", "Thermoregulation", choices = unique(homerange$thermoregulation)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=penguins, aes(locomotion))+
geom_bar()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("trophic.guild", "Trophic Guild", choices = unique(homerange$trophic.guild)),
selectInput("thermoregulation", "Thermoregulation", choices = unique(homerange$thermoregulation)),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes(locomotion))+
geom_bar()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x", "Select Fill Variable", choices = c("trophic.guild", "thermoregulation")),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes(locomotion), fill=input$x)+
geom_bar()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x", "Select Fill Variable", choices = c("trophic.guild", "thermoregulation")),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes(locomotion), fill="trophic.guild")+
geom_bar(position = "dodge")+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x", "Select Fill Variable", choices = c("trophic.guild", "thermoregulation")),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes(locomotion), fill=trophic.guild)+
geom_bar(position = "dodge")+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x", "Select Fill Variable", choices = c("trophic.guild", "thermoregulation")),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string("locomotion"), fill=input$x)+
geom_bar(position = "dodge")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("x", "Select Fill Variable", choices = c("trophic.guild", "thermoregulation")),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string("locomotion", fill=input$x))+
geom_bar(position = "dodge")
})
}
shinyApp(ui, server)
install.packages("shinydashboard")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
runApp('HomerangeShiny.R')
runApp('HomerangeShiny.R')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
homerange%>%
ggplot(aes(x=log10.hra))+
geom_density()
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange%>%
ggplot(aes(x=log10.hra))+
geom_density()
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange%>%
ggplot(aes(x=log10.hra))+
geom_density()
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(taxon)),
plotOutput("plot", width="600px", height="500px")
)
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(taxon)),
plotOutput("plot", width="600px", height="500px")
)
View(homerange)
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon)),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
filter(homerange, taxon=input$x)%>%
ggplot(homerange, aes_string(x="log10.hra"))+
geom_density()+
labs(title=input$x)
})
}
shinyApp(ui, server)
homerange%>%
ggplot(aes(x=log10.hra))+
geom_density()
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon)),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon=input$x)%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title=input$x)
})
}
shinyApp(ui, server)
homerange%>%
output$plot <- renderPlot({
homerange%>%
filter(taxon="lake fishes")%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title="input$x")
homerange%>%
filter(taxon="lake fishes")%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title="input$x")
homerange%>%
filter(taxon="lake fishes")%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title="input$x")
homerange%>%
filter(taxon=="lake fishes")%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title="input$x")
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon)),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title=input$x)
})
}
shinyApp(ui, server)
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title=input$x)
homerange%>%
filter(taxon=="lake fishes")%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title="inputx")
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon), selected = "lake fishes"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes_string(x="log10.hra"))+
geom_density()+
labs(title=input$x)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon), selected = "lake fishes"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes(x=log10.hra))+
geom_density()+
labs(title=input$x)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon), selected = "birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes(x=log10.hra))+
geom_density()+
labs(title=input$x)
})
}
shinyApp(ui, server)
unique(homerange$taxon)
type(unique(homerange$taxon))
class(unique(homerange$taxon))
class(c("a","b"))
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = c('birds'), selected = "birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes(x=log10.hra))+
geom_density()+
labs(title=input$x)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon), selected = "birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes(x=log10.hra))+
geom_density()+
})
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon), selected = "birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$x)%>%
ggplot(aes(x=log10.hra))+
geom_density()
})
}
shinyApp(ui, server)
homerange%>%
filter(taxon=="birds")%>%
ggplot(aes(x=log10.hra))+
geom_density()
homerange%>%
filter(taxon=="lake fishes")%>%
ggplot(aes(x=log10.hra))+
geom_density()
library(shiny)
ui <- fluidPage(
selectInput("taxon", "Select Taxon", choices = unique(homerange$taxon), selected = "birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density()
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot"))
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# this stops the app upon closing
session$onSessionEnded(stopApp)
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="red", alpha=0.6)
})
}
shinyApp(ui, server)
